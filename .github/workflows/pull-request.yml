name: Pull Request Workflow

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [opened, edited, reopened, synchronize]

jobs:
  golangci-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: go.mod
      - uses: golangci/golangci-lint-action@v3
        with:
          args: --verbose
          version: v1.47.3

  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: go.mod
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-ut-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-ut-
      - name: Check Go modules
        run: |
          go mod tidy && git add go.* &&
          git diff --cached --exit-code || (echo 'Please run "go mod tidy" to sync Go modules' && exit 1);
      - name: Check manifests
        run: |
          make manifests && git add config &&
          git diff --cached --exit-code || (echo 'Please run "make manifests" to generate manifests' && exit 1);
      - name: Check auto-generated codes
        run: |
          make generate && git add pkg apis &&
          git diff --cached --exit-code || (echo 'Please run "make generate" to generate Go codes' && exit 1);
      - name: Verify gofmt
        run: |
          make fmt && git add apis pkg cmd &&
          git diff --cached --exit-code || (echo 'Please run "make fmt" to verify gofmt' && exit 1);
      - name: Verify govet
        run: |
          make vet && git add apis pkg cmd &&
          git diff --cached --exit-code || (echo 'Please run "make vet" to verify govet' && exit 1);
      - name: Build
        run: make all-binaries
      - name: Coverage
        uses: codecov/codecov-action@v3
        with:
          flags: unittests
          file: cover.out
          fail_ci_if_error: true
          verbose: true
